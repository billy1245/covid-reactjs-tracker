[{"/Users/clicky/Desktop/html+css/covid-tracker/src/index.js":"1","/Users/clicky/Desktop/html+css/covid-tracker/src/App.js":"2","/Users/clicky/Desktop/html+css/covid-tracker/src/reportWebVitals.js":"3","/Users/clicky/Desktop/html+css/covid-tracker/src/components/Nav.js":"4","/Users/clicky/Desktop/html+css/covid-tracker/src/components/Map.js":"5","/Users/clicky/Desktop/html+css/covid-tracker/src/components/Card.js":"6","/Users/clicky/Desktop/html+css/covid-tracker/src/components/LineChart.js":"7","/Users/clicky/Desktop/html+css/covid-tracker/src/components/VerticalBar.js":"8","/Users/clicky/Desktop/html+css/covid-tracker/src/components/DoughnutChart.js":"9","/Users/clicky/Desktop/html+css/covid-tracker/src/components/LineChartVac.js":"10","/Users/clicky/Desktop/html+css/covid-tracker/src/components/VacVerticalBar.js":"11"},{"size":500,"mtime":1624008025857,"results":"12","hashOfConfig":"13"},{"size":5990,"mtime":1624286962946,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1624008025859,"results":"15","hashOfConfig":"13"},{"size":3530,"mtime":1624228707739,"results":"16","hashOfConfig":"13"},{"size":321,"mtime":1624285695131,"results":"17","hashOfConfig":"13"},{"size":4359,"mtime":1624285163487,"results":"18","hashOfConfig":"13"},{"size":1197,"mtime":1624112762403,"results":"19","hashOfConfig":"13"},{"size":846,"mtime":1624116480262,"results":"20","hashOfConfig":"13"},{"size":763,"mtime":1624283823468,"results":"21","hashOfConfig":"13"},{"size":788,"mtime":1624114234474,"results":"22","hashOfConfig":"13"},{"size":907,"mtime":1624115427596,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ym9bcd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/clicky/Desktop/html+css/covid-tracker/src/index.js",[],["48","49"],"/Users/clicky/Desktop/html+css/covid-tracker/src/App.js",["50","51"],"import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav'\nimport Map from './components/Map';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card'\nimport LineChart from './components/LineChart';\nimport VerticalBar from './components/VerticalBar';\nimport Loader from 'react-loader-spinner';\nimport DoughnutChart from './components/DoughnutChart';\nimport LineChartVac from './components/LineChartVac';\nimport VacVerticalBar from './components/VacVerticalBar';\n\nfunction App() {\n  const [title , setTitle ] = useState('Worldwild stats')\n  const [data , setData ] = useState([])\n  const [myData, setMyData] = useState([])\n  const [chartDays , setChartDays] = useState([])\n  const [allMydata , setAllMydata] = useState([])\n  const [loading , setLoading] = useState(true)\n  const [loadings , setLoadings] = useState(true)\n  const [load , setLoad] = useState(true)\n\n  const [verBar , setVerBar] = useState([])\n  const [country, setCountry] = useState([])\n  const [vaccine ,setVaccine] = useState([]);\n  const [vaccVerBar ,setVaccVerBar] = useState([]);\n\n  \n  const updateCountry = (country , iso2) =>{\n    setLoading(true)\n\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}`).then((response) =>response.json()).then((response)=>{\n\n      setAllMydata(\n        \n        { cases: response.cases, recovered: response.recovered , deaths: response.deaths }\n     \n   )\n\n  \n })\n\n fetch(`https://disease.sh/v3/covid-19/historical/${country}`).then((response) =>response.json()).then((response)=>{\n\n      setChartDays(response.timeline)\n      setLoading(false)\n   })\n   fetch(`https://disease.sh/v3/covid-19/vaccine/coverage/countries/${country}`).then((response) =>response.json()).then((response)=>{\n\n    setVaccine(response.timeline)\n    setLoadings(false)\n\n    \n })\n fetch(`https://disease.sh/v3/covid-19/countries/${country}`).then((response) =>response.json()).then((response)=>{\n      \n      setMyData({\n        \n            cases: response.cases,\n            todayCases: response.todayCases  ,\n            deaths: response.deaths ,\n            todayDeaths: response.todayDeaths,\n            recovered: response.recovered  ,\n            todayRecovered : response.todayRecovered\n\n             }\n             \n         )\n         \n    })\n    setTitle(`${iso2} live stats`)\n  }\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) =>response.json()).then((response)=>{\n      \n       setData(\n        response.map(res =>{\n           return { country: res.countryInfo.iso2, value: res.cases }\n         })\n       )\n\n       setCountry(\n        response.map(res =>{\n           return { country: res.country.toLowerCase() , info: res.countryInfo }\n         })\n       )\n    })\n\n\n\n    \n\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n       setAllMydata(\n        \n            { cases: response.cases, recovered: response.recovered , deaths: response.deaths }\n         \n       )\n    })\n\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n      setMyData({\n        \n            cases: response.cases,\n            todayCases: response.todayCases  ,\n            deaths: response.deaths ,\n            todayDeaths: response.todayDeaths,\n            recovered: response.recovered  ,\n            todayRecovered : response.todayRecovered\n\n             }\n             \n         )\n         \n    })\n\n\n    fetch(\"https://disease.sh/v3/covid-19/historical/all\").then((response) =>response.json()).then((response)=>{\n      console.log('am here ')\n\n      setChartDays(response)\n      setLoading(false)\n   })\n\n   fetch(\"https://disease.sh/v3/covid-19/countries/dz,fr,us,ch,in,uk\").then((response) =>response.json()).then((response)=>{\n\n    setVerBar(response)\n    setLoadings(false)\n\n    \n })\n\n fetch(\"https://disease.sh/v3/covid-19/vaccine/coverage\").then((response) =>response.json()).then((response)=>{\n\n      setVaccine(response)\n      setLoad(false)\n   })\n\n   fetch(\"https://disease.sh/v3/covid-19/vaccine/coverage/countries\").then((response) =>response.json()).then((response)=>{\n\n    setVaccVerBar(response)\n    setLoadings(false)\n\n    \n })\n  },[])\n  \n\n  return (\n    <div className=\"App\">\n      <Nav  country={country} updateCountry={updateCountry}/>\n      <h1>{title}</h1>\n      <div className=\"row\">\n      <div className=\"col-xl-5 col-lg-12\">\n        <div className=\"world-statistics\">\n          <Card myData={myData} allMydata={allMydata}/>\n\n          </div>\n          </div>\n          <div className=\"col-xl-7 col-lg-12\">\n          <Map  data={data}/>\n          </div>\n          \n          </div>\n          \n          <div className=\"row\">\n        <div className=\"col-xl-6 col-lg-12 mt-5\">\n      {loading ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={100000} //3 secs\n        className=\"spine\"\n      /> :  <LineChart chartDays={chartDays}  />\n       }\n\n       </div>\n\n\n       <div className=\"col-xl-6 col-lg-12 mt-5\">\n\n      {loadings ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={10000}\n        className=\"spine\" //3 secs\n      /> :  <VerticalBar verBar={verBar}/>\n       }\n\n       </div>\n       <div  className=\"col-xl-6 col-lg-12 mt-5\">\n        {load ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={100000} //3 secs\n        className=\"spine\"\n      /> :  <LineChartVac vaccine={vaccine}  />\n       }\n        </div>\n        <div className=\"col-xl-6 col-lg-12 mt-5\">\n\n      {loadings ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={10000}\n        className=\"spine\" //3 secs\n      /> :  <VacVerticalBar vaccVerBar={vaccVerBar}/>\n       }\n\n       </div>\n       \n      </div>\n      \n        \n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/clicky/Desktop/html+css/covid-tracker/src/reportWebVitals.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/Nav.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/Map.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/Card.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/LineChart.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/VerticalBar.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/DoughnutChart.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/LineChartVac.js",[],"/Users/clicky/Desktop/html+css/covid-tracker/src/components/VacVerticalBar.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":10,"column":8,"nodeType":"58","messageId":"59","endLine":10,"endColumn":21},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DoughnutChart' is defined but never used.","no-global-assign","no-unsafe-negation"]