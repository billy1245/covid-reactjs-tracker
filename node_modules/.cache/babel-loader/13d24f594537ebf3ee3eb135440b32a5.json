{"ast":null,"code":"var _jsxFileName = \"/Users/clicky/Desktop/html+css/covid-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Nav from './components/Nav';\nimport Map from './components/Map';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card';\nimport LineChart from './components/LineChart';\nimport VerticalBar from './components/VerticalBar';\nimport Loader from 'react-loader-spinner';\nimport DoughnutChart from './components/DoughnutChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [myData, setMyData] = useState([]);\n  const [chartDays, setChartDays] = useState([]);\n  const [allMydata, setAllMydata] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadings, setLoadings] = useState(true);\n  const [verBar, setVerBar] = useState([]);\n  const [country, setCountry] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(response => {\n      setData(response.map(res => {\n        return {\n          country: res.countryInfo.iso2,\n          value: res.cases\n        };\n      }));\n    });\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(response => {\n      setAllMydata({\n        cases: response.cases,\n        recovered: response.recovered,\n        deaths: response.deaths\n      });\n    });\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(response => {\n      setMyData({\n        cases: response.cases,\n        todayCases: response.todayCases,\n        deaths: response.deaths,\n        todayDeaths: response.todayDeaths,\n        recovered: response.recovered,\n        todayRecovered: response.todayRecovered\n      });\n    });\n    fetch(\"https://disease.sh/v3/covid-19/historical/all\").then(response => response.json()).then(response => {\n      console.log('am here ');\n      setChartDays(response);\n      setLoading(false);\n    });\n    fetch(\"https://disease.sh/v3/covid-19/countries/dz,fr,us,ch,in,uk\").then(response => response.json()).then(response => {\n      setVerBar(response);\n      setLoadings(false);\n    });\n  }, []);\n  console.log(chartDays);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-left\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          myData: myData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-right\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000 //3 secs\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n        chartDays: chartDays\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), loadings ? /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 3000 //3 secs\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(VerticalBar, {\n        verBar: verBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n        allMydata: allMydata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s1FVTsFpnqCAAVm4nEsO8iRyYx0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clicky/Desktop/html+css/covid-tracker/src/App.js"],"names":["Nav","Map","useEffect","useState","Card","LineChart","VerticalBar","Loader","DoughnutChart","App","data","setData","myData","setMyData","chartDays","setChartDays","allMydata","setAllMydata","loading","setLoading","loadings","setLoadings","verBar","setVerBar","country","setCountry","fetch","then","response","json","map","res","countryInfo","iso2","value","cases","recovered","deaths","todayCases","todayDeaths","todayRecovered","console","log"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav'\nimport Map from './components/Map';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card'\nimport LineChart from './components/LineChart';\nimport VerticalBar from './components/VerticalBar';\nimport Loader from 'react-loader-spinner';\nimport DoughnutChart from './components/DoughnutChart';\n\nfunction App() {\n  const [data , setData ] = useState([])\n  const [myData, setMyData] = useState([])\n  const [chartDays , setChartDays] = useState([])\n  const [allMydata , setAllMydata] = useState([])\n  const [loading , setLoading] = useState(true)\n  const [loadings , setLoadings] = useState(true)\n  const [verBar , setVerBar] = useState([])\n  const [country, setCountry] = useState([])\n  \n  \n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) =>response.json()).then((response)=>{\n      \n       setData(\n        response.map(res =>{\n           return { country: res.countryInfo.iso2, value: res.cases }\n         })\n       )\n\n    })\n\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n       setAllMydata(\n        \n            { cases: response.cases, recovered: response.recovered , deaths: response.deaths }\n         \n       )\n    })\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n      setMyData({\n        \n            cases: response.cases,\n            todayCases: response.todayCases  ,\n            deaths: response.deaths ,\n            todayDeaths: response.todayDeaths,\n            recovered: response.recovered  ,\n            todayRecovered : response.todayRecovered\n\n             }\n             \n         )\n         \n    })\n\n\n    fetch(\"https://disease.sh/v3/covid-19/historical/all\").then((response) =>response.json()).then((response)=>{\n      console.log('am here ')\n\n      setChartDays(response)\n      setLoading(false)\n   })\n\n   fetch(\"https://disease.sh/v3/covid-19/countries/dz,fr,us,ch,in,uk\").then((response) =>response.json()).then((response)=>{\n\n    setVerBar(response)\n    setLoadings(false)\n\n    \n })\n\n  },[])\nconsole.log(chartDays)\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"Container\">\n        <div className=\"contain-left\">\n          <Card myData={myData}/>\n          </div>\n          <div className=\"contain-right\">\n          <Map  data={data}/>\n          </div>\n      </div>\n      <div className=\"line-chart\">\n\n\n      {loading ? <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      /> :  <LineChart chartDays={chartDays}  />\n       }\n\n\n\n\n      {loadings ? <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      /> :  <VerticalBar verBar={verBar}/>\n       }\n       <DoughnutChart  allMydata={allMydata} />\n      \n     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}