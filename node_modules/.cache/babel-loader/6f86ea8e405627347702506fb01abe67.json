{"ast":null,"code":"var _jsxFileName = \"/Users/clicky/Desktop/html+css/covid-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Nav from './components/Nav';\nimport Map from './components/Map';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card';\nimport LineChart from './components/LineChart';\nimport VerticalBar from './components/VerticalBar';\nimport Loader from 'react-loader-spinner';\nimport DoughnutChart from './components/DoughnutChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [myData, setMyData] = useState([]);\n  const [chartDays, setChartDays] = useState([]);\n  const [allMydata, setAllMydata] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadings, setLoadings] = useState(true);\n  const [verBar, setVerBar] = useState([]);\n  const [country, setCountry] = useState([]);\n  const [inputs, setInputs] = useState('');\n\n  const updateCountry = country => {\n    setLoading(true);\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}`).then(response => response.json()).then(response => {\n      setAllMydata({\n        cases: response.cases,\n        recovered: response.recovered,\n        deaths: response.deaths\n      });\n    });\n    fetch(`https://disease.sh/v3/covid-19/historical/${country}`).then(response => response.json()).then(response => {\n      setChartDays(response.timeline);\n      setLoading(false);\n    });\n    setInputs('');\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(response => {\n      setData(response.map(res => {\n        return {\n          country: res.countryInfo.iso2,\n          value: res.cases\n        };\n      }));\n      setCountry(response.map(res => {\n        return {\n          country: res.country.toLowerCase(),\n          info: res.countryInfo\n        };\n      }));\n    });\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(response => {\n      setAllMydata({\n        cases: response.cases,\n        recovered: response.recovered,\n        deaths: response.deaths\n      });\n    });\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(response => {\n      setMyData({\n        cases: response.cases,\n        todayCases: response.todayCases,\n        deaths: response.deaths,\n        todayDeaths: response.todayDeaths,\n        recovered: response.recovered,\n        todayRecovered: response.todayRecovered\n      });\n    });\n    fetch(\"https://disease.sh/v3/covid-19/historical/all\").then(response => response.json()).then(response => {\n      console.log('am here ');\n      setChartDays(response);\n      setLoading(false);\n    });\n    fetch(\"https://disease.sh/v3/covid-19/countries/dz,fr,us,ch,in,uk\").then(response => response.json()).then(response => {\n      setVerBar(response);\n      setLoadings(false);\n    });\n  }, []);\n  console.log(chartDays);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      country: country,\n      updateCountry: updateCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-left\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          myData: myData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-right\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-left\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#FF69B4\",\n          height: 100,\n          width: 100,\n          timeout: 100000 //3 secs\n          ,\n          className: \"spine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n          chartDays: chartDays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contain-right\",\n        children: loadings ? /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Puff\",\n          color: \"#FF69B4\",\n          height: 100,\n          width: 100,\n          timeout: 10000,\n          className: \"spine\" //3 secs\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(VerticalBar, {\n          verBar: verBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n        allMydata: allMydata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o2QjVwCxtUtdTPdrVhorNedxwUA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clicky/Desktop/html+css/covid-tracker/src/App.js"],"names":["Nav","Map","useEffect","useState","Card","LineChart","VerticalBar","Loader","DoughnutChart","App","data","setData","myData","setMyData","chartDays","setChartDays","allMydata","setAllMydata","loading","setLoading","loadings","setLoadings","verBar","setVerBar","country","setCountry","inputs","setInputs","updateCountry","fetch","then","response","json","cases","recovered","deaths","timeline","map","res","countryInfo","iso2","value","toLowerCase","info","todayCases","todayDeaths","todayRecovered","console","log"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Nav from './components/Nav'\nimport Map from './components/Map';\nimport { useEffect, useState } from 'react';\nimport Card from './components/Card'\nimport LineChart from './components/LineChart';\nimport VerticalBar from './components/VerticalBar';\nimport Loader from 'react-loader-spinner';\nimport DoughnutChart from './components/DoughnutChart';\n\nfunction App() {\n  const [data , setData ] = useState([])\n  const [myData, setMyData] = useState([])\n  const [chartDays , setChartDays] = useState([])\n  const [allMydata , setAllMydata] = useState([])\n  const [loading , setLoading] = useState(true)\n  const [loadings , setLoadings] = useState(true)\n  const [verBar , setVerBar] = useState([])\n  const [country, setCountry] = useState([])\n  const [inputs ,setInputs] = useState('');\n\n  const updateCountry = (country) =>{\n    setLoading(true)\n\n    fetch(`https://disease.sh/v3/covid-19/countries/${country}`).then((response) =>response.json()).then((response)=>{\n\n      setAllMydata(\n        \n        { cases: response.cases, recovered: response.recovered , deaths: response.deaths }\n     \n   )\n\n  \n })\n\n fetch(`https://disease.sh/v3/covid-19/historical/${country}`).then((response) =>response.json()).then((response)=>{\n\n      setChartDays(response.timeline)\n      setLoading(false)\n   })\n   setInputs('');\n  }\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then((response) =>response.json()).then((response)=>{\n      \n       setData(\n        response.map(res =>{\n           return { country: res.countryInfo.iso2, value: res.cases }\n         })\n       )\n\n       setCountry(\n        response.map(res =>{\n           return { country: res.country.toLowerCase() , info: res.countryInfo }\n         })\n       )\n    })\n\n    \n\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n       setAllMydata(\n        \n            { cases: response.cases, recovered: response.recovered , deaths: response.deaths }\n         \n       )\n    })\n    fetch(\"https://disease.sh/v3/covid-19/all\").then((response) =>response.json()).then((response)=>{\n      \n      setMyData({\n        \n            cases: response.cases,\n            todayCases: response.todayCases  ,\n            deaths: response.deaths ,\n            todayDeaths: response.todayDeaths,\n            recovered: response.recovered  ,\n            todayRecovered : response.todayRecovered\n\n             }\n             \n         )\n         \n    })\n\n\n    fetch(\"https://disease.sh/v3/covid-19/historical/all\").then((response) =>response.json()).then((response)=>{\n      console.log('am here ')\n\n      setChartDays(response)\n      setLoading(false)\n   })\n\n   fetch(\"https://disease.sh/v3/covid-19/countries/dz,fr,us,ch,in,uk\").then((response) =>response.json()).then((response)=>{\n\n    setVerBar(response)\n    setLoadings(false)\n\n    \n })\n\n  },[])\nconsole.log(chartDays)\n\n  return (\n    <div className=\"App\">\n      <Nav  country={country} updateCountry={updateCountry}/>\n      <div className=\"Container\">\n        <div className=\"contain-left\">\n          <Card myData={myData}/>\n          </div>\n          <div className=\"contain-right\">\n          <Map  data={data}/>\n          </div>\n      </div>\n      <div className=\"Container\">\n        <div className=\"contain-left\">\n\n\n      {loading ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={100000} //3 secs\n        className=\"spine\"\n      /> :  <LineChart chartDays={chartDays}  />\n       }\n\n       </div>\n\n\n       <div className=\"contain-right\">\n\n      {loadings ? <Loader\n        type=\"Puff\"\n        color=\"#FF69B4\"\n        height={100}\n        width={100}\n        timeout={10000}\n        className=\"spine\" //3 secs\n      /> :  <VerticalBar verBar={verBar}/>\n       }\n\n       </div>\n       <DoughnutChart  allMydata={allMydata} />\n      \n     \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}